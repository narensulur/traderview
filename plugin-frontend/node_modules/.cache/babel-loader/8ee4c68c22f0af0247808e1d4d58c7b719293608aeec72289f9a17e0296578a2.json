{"ast":null,"code":"var _jsxFileName = \"/Users/nsulur/dev/personal/traderview/plugin-frontend/src/components/SessionTimeoutWarning.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Modal, Button, ProgressBar } from 'react-bootstrap';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SessionTimeoutWarning = () => {\n  _s();\n  const {\n    logout\n  } = useAuth();\n  const [showWarning, setShowWarning] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(0);\n  const [warningTimer, setWarningTimer] = useState(null);\n  useEffect(() => {\n    const checkSessionTimeout = () => {\n      const loginTime = localStorage.getItem('traderview_login_time');\n      if (!loginTime) return;\n      const currentTime = new Date().getTime();\n      const sessionDuration = 2 * 60 * 60 * 1000; // 2 hours\n      const warningTime = 5 * 60 * 1000; // 5 minutes before expiry\n      const timeSinceLogin = currentTime - parseInt(loginTime);\n      const timeUntilExpiry = sessionDuration - timeSinceLogin;\n      if (timeUntilExpiry <= warningTime && timeUntilExpiry > 0) {\n        setShowWarning(true);\n        setTimeLeft(Math.floor(timeUntilExpiry / 1000));\n\n        // Start countdown\n        const timer = setInterval(() => {\n          setTimeLeft(prev => {\n            if (prev <= 1) {\n              clearInterval(timer);\n              logout();\n              return 0;\n            }\n            return prev - 1;\n          });\n        }, 1000);\n        setWarningTimer(timer);\n      } else if (timeUntilExpiry <= 0) {\n        logout();\n      }\n    };\n\n    // Check immediately\n    checkSessionTimeout();\n\n    // Check every minute\n    const interval = setInterval(checkSessionTimeout, 60000);\n    return () => {\n      clearInterval(interval);\n      if (warningTimer) {\n        clearInterval(warningTimer);\n      }\n    };\n  }, [logout, warningTimer]);\n  const handleExtendSession = () => {\n    // Reset login time to extend session\n    const newLoginTime = new Date().getTime();\n    localStorage.setItem('traderview_login_time', newLoginTime.toString());\n    setShowWarning(false);\n    if (warningTimer) {\n      clearInterval(warningTimer);\n    }\n  };\n  const handleLogoutNow = () => {\n    logout();\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n  const progressPercentage = Math.max(0, timeLeft / (5 * 60) * 100);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: showWarning,\n    backdrop: \"static\",\n    keyboard: false,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      className: \"bg-warning text-dark\",\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-exclamation-triangle me-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), \"Session Expiring Soon\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-3\",\n          children: [\"Your session will expire in \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: formatTime(timeLeft)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          variant: \"warning\",\n          now: progressPercentage,\n          className: \"mb-3\",\n          style: {\n            height: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted small\",\n          children: \"For security reasons, sessions automatically expire after 2 hours of activity.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-secondary\",\n        onClick: handleLogoutNow,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-box-arrow-right me-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), \"Logout Now\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleExtendSession,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-arrow-clockwise me-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), \"Extend Session\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(SessionTimeoutWarning, \"9/4CC6sUqJ6cSTDOg3nswWle4JQ=\", false, function () {\n  return [useAuth];\n});\n_c = SessionTimeoutWarning;\nexport default SessionTimeoutWarning;\nvar _c;\n$RefreshReg$(_c, \"SessionTimeoutWarning\");","map":{"version":3,"names":["React","useState","useEffect","Modal","Button","ProgressBar","useAuth","jsxDEV","_jsxDEV","SessionTimeoutWarning","_s","logout","showWarning","setShowWarning","timeLeft","setTimeLeft","warningTimer","setWarningTimer","checkSessionTimeout","loginTime","localStorage","getItem","currentTime","Date","getTime","sessionDuration","warningTime","timeSinceLogin","parseInt","timeUntilExpiry","Math","floor","timer","setInterval","prev","clearInterval","interval","handleExtendSession","newLoginTime","setItem","toString","handleLogoutNow","formatTime","seconds","minutes","remainingSeconds","padStart","progressPercentage","max","show","backdrop","keyboard","centered","children","Header","className","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","variant","now","style","height","Footer","onClick","_c","$RefreshReg$"],"sources":["/Users/nsulur/dev/personal/traderview/plugin-frontend/src/components/SessionTimeoutWarning.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Modal, Button, ProgressBar } from 'react-bootstrap';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst SessionTimeoutWarning = () => {\n  const { logout } = useAuth();\n  const [showWarning, setShowWarning] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(0);\n  const [warningTimer, setWarningTimer] = useState(null);\n\n  useEffect(() => {\n    const checkSessionTimeout = () => {\n      const loginTime = localStorage.getItem('traderview_login_time');\n      if (!loginTime) return;\n\n      const currentTime = new Date().getTime();\n      const sessionDuration = 2 * 60 * 60 * 1000; // 2 hours\n      const warningTime = 5 * 60 * 1000; // 5 minutes before expiry\n      const timeSinceLogin = currentTime - parseInt(loginTime);\n      const timeUntilExpiry = sessionDuration - timeSinceLogin;\n\n      if (timeUntilExpiry <= warningTime && timeUntilExpiry > 0) {\n        setShowWarning(true);\n        setTimeLeft(Math.floor(timeUntilExpiry / 1000));\n        \n        // Start countdown\n        const timer = setInterval(() => {\n          setTimeLeft(prev => {\n            if (prev <= 1) {\n              clearInterval(timer);\n              logout();\n              return 0;\n            }\n            return prev - 1;\n          });\n        }, 1000);\n        \n        setWarningTimer(timer);\n      } else if (timeUntilExpiry <= 0) {\n        logout();\n      }\n    };\n\n    // Check immediately\n    checkSessionTimeout();\n    \n    // Check every minute\n    const interval = setInterval(checkSessionTimeout, 60000);\n\n    return () => {\n      clearInterval(interval);\n      if (warningTimer) {\n        clearInterval(warningTimer);\n      }\n    };\n  }, [logout, warningTimer]);\n\n  const handleExtendSession = () => {\n    // Reset login time to extend session\n    const newLoginTime = new Date().getTime();\n    localStorage.setItem('traderview_login_time', newLoginTime.toString());\n    setShowWarning(false);\n    if (warningTimer) {\n      clearInterval(warningTimer);\n    }\n  };\n\n  const handleLogoutNow = () => {\n    logout();\n  };\n\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  const progressPercentage = Math.max(0, (timeLeft / (5 * 60)) * 100);\n\n  return (\n    <Modal \n      show={showWarning} \n      backdrop=\"static\" \n      keyboard={false}\n      centered\n    >\n      <Modal.Header className=\"bg-warning text-dark\">\n        <Modal.Title>\n          <i className=\"bi bi-exclamation-triangle me-2\"></i>\n          Session Expiring Soon\n        </Modal.Title>\n      </Modal.Header>\n      \n      <Modal.Body>\n        <div className=\"text-center mb-3\">\n          <p className=\"mb-3\">\n            Your session will expire in <strong>{formatTime(timeLeft)}</strong>\n          </p>\n          \n          <ProgressBar \n            variant=\"warning\" \n            now={progressPercentage} \n            className=\"mb-3\"\n            style={{ height: '10px' }}\n          />\n          \n          <p className=\"text-muted small\">\n            For security reasons, sessions automatically expire after 2 hours of activity.\n          </p>\n        </div>\n      </Modal.Body>\n      \n      <Modal.Footer>\n        <Button variant=\"outline-secondary\" onClick={handleLogoutNow}>\n          <i className=\"bi bi-box-arrow-right me-1\"></i>\n          Logout Now\n        </Button>\n        <Button variant=\"primary\" onClick={handleExtendSession}>\n          <i className=\"bi bi-arrow-clockwise me-1\"></i>\n          Extend Session\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default SessionTimeoutWarning;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}